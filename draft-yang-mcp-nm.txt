



Network Management Working Group                                 Y. Yang
Internet-Draft                                                     Q. Wu
Intended status: Informational                                    Huawei
Expires: 6 December 2025                                     4 June 2025


            Applicability of MCP for the Network Management
                        draft-yang-mcp-nm-latest

Abstract

   The application of MCP in the network management field is meant to
   develop various rich AI driven network applications, realize intent
   based networks management automation in the multi-vendor
   heterogeneous network environment.  This document discusses the
   applicability of MCP to the network management in the IP network that
   utilizes IETF technologies.  It explores operational aspect, key
   components, generic workflow and deployment scenarios.  The impact of
   integrating MCP into the network management system is also discussed.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 6 December 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Terminology & Notation Conventions
     2.1.  MCP
     2.2.  Others
   3.  Overview of key challenges for the network management
     3.1.  Inconsistent YANG Model Support
     3.2.  Partial or Non-Standard Network management protocols
           Implementations
     3.3.  Lack integration with Network APIs
   4.  Operational Consideration
   5.  Architecture Overview
     5.1.  Encapsulating Device Operations into MCP Tools
     5.2.  LLM APIs for Intent-to-Tool Translation
     5.3.  Closed-Loop Automation Execution
     5.4.  Workflow
   6.  Deployment considerations
     6.1.  MCP hosted within the Network Controller
     6.2.  MCP Server Hosted Within the Network Device
   7.  Impact of integrating MCP on Network Management
   8.  IANA Considerations
   9.  Security Considerations
   10. Informative References
   Authors' Addresses

1.  Introduction

   The Model Control Protocol (MCP) provides a standardized way for LLMs
   to access and utilize information from different sources, interact
   with tools, making it easier to build AI applications that can
   interact with external systems.

   MCP has been seen as rapid adoption technology in the consumer field.
   The application of MCP in the network management field is meant to
   develop various rich AI driven network applications, realize intent
   based networks management automation in the multi-vendor
   heterogeneous network environment.  By establishing standard
   interfaces for tool encapsulation, intent translation, and closed-
   loop execution within the network management system or the network
   controller, MCP enables AI Agents to have:

   *  Unified operation abstraction through normalized MCP tool
      definitions

   *  Seamless LLM integration via structured API contracts

   *  Closed-Loop Automation Execution

   This document discusses the applicability of MCP to the network
   management plane in the IP network that utilizes IETF technologies.
   It explores operational aspect, key components, generic workflow and
   deployment scenarios.  The impact of integrating MCP into the network
   management system will also be discussed.

2.  Terminology & Notation Conventions

   The following terms are used throughout this document:

2.1.  MCP

   *  *MCP Protocol*: MCP is an open standard designed to facilitate
      communication between LLMs and external data sources or tools.

   *  *MCP Host*: The entity initiating the LLM request.

   *  *MCP Client*: A built-in module within a host, specifically
      designed for interaction with the MCP server.

   *  *MCP Server*: A dedicated server that interacts with MCP clients
      and provides MCP services.

2.2.  Others

   *  *LLM*: Large Language Model

   *  *Netconf*: Network Configuration Protocol

   *  *Restconf*: RESTful Network Configuration Protocol

   *  *CLI*: Command Line Interface

3.  Overview of key challenges for the network management

   In large scale network management environment, a large number of
   devices from different vendors need to be uniformly managed, which
   can lead to the following issues or challenges:

3.1.  Inconsistent YANG Model Support

   Different vendors implement different YANG models (standard or
   proprietary), leading to:

   *  Lack of uniform data structures for configuration/state retrieval.

   *  Requirement for vendor-specific adaptations in automation scripts.

   Also IETF standard device models has slow adoption.  Similar device
   models are defined in Openconfig or other SDOs, therefore the current
   YANG device models ecosystem is fragmented.

3.2.  Partial or Non-Standard Network management protocols
      Implementations

   Some vendors only partially support standard Network management
   protocols, and proprietary extensions may break interoperability.
   Other vendors might choose non-stanard network management protocol or
   telemetry protocol such as gnmi [I-D.openconfig-rtgwg-gnmi-spec],
   grpc [I-D.kumar-rtgwg-grpc-protocol].  A significant number of
   network operators continue to rely on legacy network management
   mechanisms such as SNMP and CLI.

3.3.  Lack integration with Network APIs

   Today, network API has been widely adopted by the northbound
   interface of OSS/BSS or Network orchestrators while YANG data models
   have been widely adopted by the northbound interface of the network
   controller or the interface between the network controller and the
   network devices.  However Network API ecosystem and YANG model
   ecosystem are both built as silo and lack integration or mapping
   between them.

4.  Operational Consideration

   This section outlines operational aspects of MCP with Network
   management requirements as follows:

   *  _Function-Specific MCP Servers_: Deploy dedicated MCP servers
      tailored to different functions and domains, such as network log
      analysis, device configuration management, energy consumption
      management, and security operations.

   *  _Secure and Scalable Architecture_: Implement stringent security
      measures to ensure only authorized AI models and users can access
      and control network resources via MCP.

   *  _Automated Workflows_: Leverage MCP to enable LLM-coordinated
      multi-tool automation, supporting real-time monitoring,
      diagnostics, and fault remediation.

5.  Architecture Overview

   The LLM model with MCP support and its ability to comprehend diverse
   complex requirements and deliver corresponding functionalities, is
   well- suited for large scale multi-vendor network management
   environments, effectively addressing the aforementioned operational
   challenges in Section 4.  Therefore, we have introduced the MCP
   protocol in the network management environments for building an
   intelligent network management and control platform.

5.1.  Encapsulating Device Operations into MCP Tools

   *  _Objective_: Standardize heterogeneous device operations into
      modular, reusable tools.

   *  _Implementation_:

      -  _Tool Abstraction_: Vendor-specific commands are wrapped into
         discrete MCP Tools with uniform schemas.

      -  _Tool Registry_: A centralized repository hosts MCP Tools with
         metadata (e.g., vendor compatibility, privilege requirements).

      -  _Dynamic Loading_: MCP Servers dynamically invoke required
         tools via network management protocol on demand, thereby
         decoupling tool lifecycle management from the server's core
         functionality.

   *  _Benefits_:

      -  Eliminates manual translation of commands across vendors.

      -  Enables plug-and-play integration of new device types.

5.2.  LLM APIs for Intent-to-Tool Translation

   *  Objective: Bridge natural language instructions to executable tool
      sequences.

   *  Workflow:

      -  Command Parsing: LLM APIs (e.g., GPT-4, Claude) process user
         queries like "Upgrade all switches in Datacenter A during
         maintenance" into structured commands.

      -  Toolchain Generation: The LLM selects and sequences MCP Tools
         (e.g., get_inventory → schedule_downtime → download_firmware →
         validate_upgrade).

      -  Validation: Pre-execution checks verify tool compatibility with
         target devices.

   *  APIs Exposed:

      -  mcp-translate: Converts intent to toolchain JSON.

      -  mcp-validate: Confirms tool availability/permissions.

5.3.  Closed-Loop Automation Execution

   *  Objective: Achieve end-to-end automation from language input to
      network changes.

   *  Execution Flow:

      -  User Input: Operator submits request via chat/voice (e.g.,
         "Block TCP port 22 on all edge routers").

      -  LLM Processing:

         o  Intent → Toolchain: Identifies get_edge_routers +
            configure_acl tools.

         o  Parameter Binding: Maps "TCP port 22" to {"protocol": "tcp",
            "port": 22, "action": "deny"}.

      -  Orchestration: MCP Runtime schedules tools, handles
         dependencies (e.g., backup configs first), and enforces RBAC.

      -  Feedback: Real-time logs/rollback if configure_acl fails on any
         device.

   *  Key Features:

      -  Idempotency: Tools safely retry/rollback.

      -  Auditability: Full traceability of LLM decisions and tool
         executions.

5.4.  Workflow

   A general workflow is as follows:

   *  User Input Submission: An operator submits a natural language
      request (e.g., "Disable port 22 on all edge switches") to the MCP
      client.  And The MCP client forwards this request to the LLM.

   *  LLM Intent Processing: The LLM parses the input, identifies the
      operational intent, and forwards a structured request to the MCP
      client, which queries the MCP Server to retrieve the available
      tools.

   *  LLM Toolchain Decision:

      -  The LLM evaluates the context and if tools are required, select
         and sequence tools.

      -  The decision is sent back to the MCP Client and then MCP Client
         will execute tools via server.

   *  Protocol Translation & Execution: The MCP Server executes the
      translated commands on target devices and returns results to the
      client.

   *  Result Aggregation & Feedback: The MCP Client collates tool
      outputs (success/failure logs) and forwards them to the LLM for
      summarization.

   Take multi-vendor network management as an example, the MCP server is
   deployed locally on the network controller, and the tools are
   integrated into the MCP server.  The server provide the following
   registered tool descriptor information:

   Tools description: it describes the name, use, and parameters of
   tools.

   Tools implementation: MCP implementation describe how the tools are
   invoked.

   Suppose a user submits a request (via the client) such as "Configure
   OSPF Area 0 with process ID 100 for all core switches in the Beijing
   data center," the MCP client retrieves the necessary tooling
   descriptor information from the MCP server and forwards it to the
   LLM.  The LLM determines the appropriate tools and responds in JSON
   format.

   The MCP server executes the network management operation in JSON
   format and returns the results (in JSON) to the MCP client, which
   forwards them to the LLM.  The LLM parses the response, generates a
   natural-language summary, and sends it back to the client for final
   presentation to the user.

6.  Deployment considerations

   While the overall workflow remains consistent, the MCP Server's
   deployment location (on-premises or remote) introduces operational
   variations.  This section explores two deployment scenarios.

6.1.  MCP hosted within the Network Controller

                     +--------------+
                     |     User     |
                     +-------+------+
                             |
                     Natural Language
                    Command  |
                  ...........|............................
                  .          |                           .
                  .  +-------+------+       +-----------+.
                  .  |  MCP Client  +-------+  LLM      |.
                  .  +-------+------+       +-----------+.
                  .          |                           .
                  .   Tools Request                      .Network
                  .          |                           .Controller
                  .  +-------+------+                    .
                  .  |  MCP Server  |                    .
                  .  +-------+------+                    .
                  .          |                           .
                  ...........|............................
                             |
                     Netconf/Telemetry
         +-------------------+------------------+
         |                   |                  |
         |                   |                  |
   +-----+--------+  +-------+------+    +------+-------+
   |   Network    |  |   Network    |    |   Network    |
   |   Device     |  |   Device     |    |   Device     |
   +--------------+  +--------------+    +--------------+

   *  Scope: The MCP Server,collocated with the LLM model and MCP
      Client, is hosted within the operator's local network, the network
      devices stay as it is.

   *  Key Characteristics:

      -  Low Latency: Direct access to network devices minimizes tool
         execution delays.

      -  Data Control: All processing (LLM queries, tool executions)
         remains within the operator’s infrastructure.

6.2.  MCP Server Hosted Within the Network Device

                      +--------------+
                      |     User     |
                      +-------+------+
                              |
                     Natural Language
                           Command
   .........................................................
   .                          |                            .
   .                  +-------+------+       +-----------+ .
   . Network          |  MCP Client  +-------+  LLM      | .
   . Controller       +-------+------+       +-----------+ .
   .                          |                            .
   .                   Tools Request                       .
   .........................................................
   .                  +-------+------+                     .
   .                  |  MCP Server  |                     .
   .                  +-------+------+                     .
   .Network                        CLI                     .
   .Device                          |                      .
   .     +--------------------+--------------------+       .
   .     |                    |                    |       .
   .+----+-------+    +-------+------+     +-------+------+.
   .| Network    |    |   Network    |     |   Network    |.
   .| Device     |    |   Device     |     |   Device     |.
   .+------------+    +--------------+     +--------------+.
   .                                                       .
   .........................................................

   *  Scope: The MCP Client operates in a cloud environment, serving
      distributed MCP Server via public/private APIs.

   *  Key Characteristics:

      -  Decentralized Management: A single MCP Client instance can
         manage multiple MCP Server instances in geographically
         dispersed network.

      -  Scalability: Cloud-native scaling accommodates dynamic tool
         registry updates and high request volumes.

7.  Impact of integrating MCP on Network Management

   +------------+-----------------------------+-----------------------+
   |            |   MCP Hosted Within         |   MCP Server Hosted   |
   |            | the Network Controller      | Within Network Device |
   +------------+-----------------------------+-----------------------+
   |            |                             |                       |
   |Management  |  No impact,reuse            |1.Protocol for Context |
   |Protocol    |  existing NM Protocols      |2 Management including |
   |            |                             | approval mechanisms   |
   |            |                             | where human input is  |
   |            |                             | required.             |
   |            |                             |3.Coexist with NM proto|
   |            |                             |in case not all devices|
   |            |                             |support MCP            |
   +------------+-----------------------------+-----------------------+
   |            |                             |                       |
   |Management  |  Use internal tools and     |  Need to ensure right |
   |   Tools    |  LLMs within the controller |  tools and background |
   |            |  for managing context and   |  info in the network  |
   |            |  decision making            |  device               |
   +------------+-----------------------------+-----------------------+
   |            |                             |                       |
   |            |                             |                       |
   |  Task      |  Works with pre-structured  |                       |
   |Management  |  goal driven tasks.         |    Same Rule Apply    |
   |            |  Tasks are usually designed |                       |
   |            |  and pre-defined by client  |                       |
   |            |                             |                       |
   +------------+-----------------------------+-----------------------+
   |            |  Yes,                       |    Yes                |
   | Stateful   |  Agents can retain context  |                       |
   |Management  |  from previous interaction, |    Same Rule Apply    |
   |            |  enabling continuity in     |                       |
   |            |  long term task or          |                       |
   |            |  conversation               |                       |
   -------------+-----------------------------+-----------------------+

8.  IANA Considerations

   This document has no IANA actions.

9.  Security Considerations

10.  Informative References

   [I-D.kumar-rtgwg-grpc-protocol]
              Kumar, A., Kolhe, J., Ghemawat, S., and L. Ryan, "gRPC
              Protocol", Work in Progress, Internet-Draft, draft-kumar-
              rtgwg-grpc-protocol-00, 8 July 2016,
              <https://datatracker.ietf.org/doc/html/draft-kumar-rtgwg-
              grpc-protocol-00>.

   [I-D.openconfig-rtgwg-gnmi-spec]
              Shakir, R., Shaikh, A., Borman, P., Hines, M., Lebsack,
              C., and C. Morrow, "gRPC Network Management Interface
              (gNMI)", Work in Progress, Internet-Draft, draft-
              openconfig-rtgwg-gnmi-spec-01, 5 March 2018,
              <https://datatracker.ietf.org/doc/html/draft-openconfig-
              rtgwg-gnmi-spec-01>.

Authors' Addresses

   Yuanyuan Yang
   Huawei
   Email: yangyuanyuan55@huawei.com


   Qin Wu
   Huawei
   Email: bill.wu@huawei.com
